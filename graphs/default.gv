digraph AST {
	translation_unit_50 -> function_definition_49;
	function_definition_49 -> type_specifier_0;
	type_specifier_0 [label="int"]
	function_definition_49 -> direct_declarator_2;
	direct_declarator_2 -> identifier_1;
	identifier_1 [label="main"]
	function_definition_49 -> compound_statement_48;
	compound_statement_48 -> declaration_5;
	declaration_5 -> type_specifier_3;
	type_specifier_3 [label="int"]
	declaration_5 -> identifier_4;
	identifier_4 [label="i"]
	compound_statement_48 -> statement_list_47;
	statement_list_47 -> statement_list_44;
	statement_list_44 -> statement_list_33;
	statement_list_33 -> statement_list_24;
	statement_list_24 -> statement_list_18;
	statement_list_18 -> statement_list_10;
	statement_list_10 -> postfix_expression_7;
	postfix_expression_7 -> identifier_6;
	identifier_6 [label="i"]
	statement_list_10 -> unary_expression_9;
	unary_expression_9 -> identifier_8;
	identifier_8 [label="i"]
	statement_list_18 -> postfix_expression_17;
	postfix_expression_17 -> identifier_11;
	identifier_11 [label="i"]
	postfix_expression_17 -> argument_expression_list_16;
	argument_expression_list_16 -> argument_expression_list_14;
	argument_expression_list_14 -> constant_12;
	constant_12 [label="2"]
	argument_expression_list_14 -> constant_13;
	constant_13 [label="3"]
	argument_expression_list_16 -> constant_15;
	constant_15 [label="4"]
	statement_list_24 -> selection_statement_23;
	selection_statement_23 [shape=hexagon,color=green,label="switch"]
	selection_statement_23 -> constant_19;
	constant_19 [label="1"]
	selection_statement_23 -> labeled_statement_22;
	labeled_statement_22 [shape = box,color=blue,label="Label"]
	labeled_statement_22 -> constant_20;
	constant_20 [label="2"]
	labeled_statement_22 -> jump_statement_21;
	jump_statement_21 [shape = triangle,color=purple,label="break"]
	statement_list_33 -> selection_statement_32;
	selection_statement_32 [shape=diamond,color=green,label="if"]
	selection_statement_32 -> constant_25;
	constant_25 [label="1"]
	selection_statement_32 -> assignment_expression_31;
	assignment_expression_31 -> identifier_26;
	identifier_26 [label="i"]
	assignment_expression_31 -> assignment_operator_27;
	assignment_expression_31 -> additive_expression_30;
	additive_expression_30 -> identifier_28;
	identifier_28 [label="i"]
	additive_expression_30 -> constant_29;
	constant_29 [label="3"]
	statement_list_44 -> selection_statement_43;
	selection_statement_43 [shape=diamond,color=green,label="if else"]
	selection_statement_43 -> identifier_34;
	identifier_34 [label="i"]
	selection_statement_43 -> assignment_expression_38;
	assignment_expression_38 -> identifier_35;
	identifier_35 [label="i"]
	assignment_expression_38 -> assignment_operator_36;
	assignment_expression_38 -> constant_37;
	constant_37 [label="2"]
	selection_statement_43 -> assignment_expression_42;
	assignment_expression_42 -> identifier_39;
	identifier_39 [label="i"]
	assignment_expression_42 -> assignment_operator_40;
	assignment_expression_42 -> constant_41;
	constant_41 [label="1"]
	statement_list_47 -> jump_statement_46;
	jump_statement_46 [shape = triangle,color=purple,label="return expr"]
	jump_statement_46 -> constant_45;
	constant_45 [label="0"]
}
