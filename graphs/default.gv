digraph AST {
	translation_unit_149 -> external_declaration_148;
	external_declaration_148 -> function_definition_147;
	function_definition_147 -> declaration_specifiers_1;
	declaration_specifiers_1 -> type_specifier_0;
	function_definition_147 -> declarator_5;
	declarator_5 -> direct_declarator_4;
	direct_declarator_4 -> direct_declarator_3;
	direct_declarator_3 -> identifier_2;
	function_definition_147 -> compound_statement_146;
	compound_statement_146 -> declaration_list_41;
	declaration_list_41 -> declaration_list_14;
	declaration_list_14 -> declaration_13;
	declaration_13 -> declaration_specifiers_7;
	declaration_specifiers_7 -> type_specifier_6;
	declaration_13 -> init_declarator_list_12;
	init_declarator_list_12 -> init_declarator_11;
	init_declarator_11 -> declarator_10;
	declarator_10 -> direct_declarator_9;
	direct_declarator_9 -> identifier_8;
	declaration_list_41 -> declaration_40;
	declaration_40 -> declaration_specifiers_16;
	declaration_specifiers_16 -> type_specifier_15;
	declaration_40 -> init_declarator_list_39;
	init_declarator_list_39 -> init_declarator_38;
	init_declarator_38 -> declarator_19;
	declarator_19 -> direct_declarator_18;
	direct_declarator_18 -> identifier_17;
	init_declarator_38 -> initializer_37;
	initializer_37 -> assignment_expression_36;
	assignment_expression_36 -> conditional_expression_35;
	conditional_expression_35 -> logical_or_expression_34;
	logical_or_expression_34 -> logical_and_expression_33;
	logical_and_expression_33 -> inclusive_or_expression32;
	inclusive_or_expression32 -> exclusive_or_expression_31;
	exclusive_or_expression_31 -> and_expression_30;
	and_expression_30 -> equality_expression_29;
	equality_expression_29 -> relational_expression_28;
	relational_expression_28 -> shift_expression_27;
	shift_expression_27 -> additive_expression_26;
	additive_expression_26 -> multiplicative_expression_25;
	multiplicative_expression_25 -> cast_expression_24;
	cast_expression_24 -> unary_expression_23;
	unary_expression_23 -> postfix_expression_22;
	postfix_expression_22 -> primary_expression_21;
	primary_expression_21 -> constant20;
	compound_statement_146 -> statement_list_145;
	statement_list_145 -> statement_list_124;
	statement_list_124 -> statement_list_76;
	statement_list_76 -> statement_list_68;
	statement_list_68 -> statement_67;
	statement_67 -> expression_statement_66;
	expression_statement_66 -> expression_65;
	expression_65 -> assignment_expression_64;
	assignment_expression_64 -> unary_expression_45;
	unary_expression_45 -> postfix_expression_44;
	postfix_expression_44 -> primary_expression_43;
	primary_expression_43 -> identifier_42;
	assignment_expression_64 -> assignment_operator_46;
	assignment_expression_64 -> assignment_expression_63;
	assignment_expression_63 -> conditional_expression_62;
	conditional_expression_62 -> logical_or_expression_61;
	logical_or_expression_61 -> logical_and_expression_60;
	logical_and_expression_60 -> inclusive_or_expression59;
	inclusive_or_expression59 -> exclusive_or_expression_58;
	exclusive_or_expression_58 -> and_expression_57;
	and_expression_57 -> equality_expression_56;
	equality_expression_56 -> relational_expression_55;
	relational_expression_55 -> shift_expression_54;
	shift_expression_54 -> additive_expression_53;
	additive_expression_53 -> multiplicative_expression_52;
	multiplicative_expression_52 -> cast_expression_51;
	cast_expression_51 -> unary_expression_50;
	unary_expression_50 -> postfix_expression_49;
	postfix_expression_49 -> primary_expression_48;
	primary_expression_48 -> constant47;
	statement_list_76 -> statement_75;
	statement_75 -> iteration_statement_74;
iteration_statement_74 [shape=house,label="for type
iteration",color=firebrick1]
	iteration_statement_74 -> empty_71;
empty_71 [style=filled,color=indigo,fontcolor=white]
	iteration_statement_74 -> empty_73;
empty_73 [style=filled,color=indigo,fontcolor=white]
	iteration_statement_74 -> empty_72;
empty_72 [style=filled,color=indigo,fontcolor=white]
	iteration_statement_74 -> statement_70;
	statement_70 -> compound_statement_69;
	statement_list_124 -> statement_123;
	statement_123 -> iteration_statement_122;
iteration_statement_122 [shape=invhouse,label="do type
iteration",color=firebrick1]
	iteration_statement_122 -> empty_120;
empty_120 [style=filled,color=indigo,fontcolor=white]
	iteration_statement_122 -> expression_119;
	expression_119 -> assignment_expression_118;
	assignment_expression_118 -> conditional_expression_117;
	conditional_expression_117 -> logical_or_expression_116;
	logical_or_expression_116 -> logical_and_expression_115;
	logical_and_expression_115 -> inclusive_or_expression114;
	inclusive_or_expression114 -> exclusive_or_expression_113;
	exclusive_or_expression_113 -> and_expression_112;
	and_expression_112 -> equality_expression_111;
	equality_expression_111 -> relational_expression_110;
	relational_expression_110 -> shift_expression_109;
	shift_expression_109 -> additive_expression_108;
	additive_expression_108 -> multiplicative_expression_107;
	multiplicative_expression_107 -> cast_expression_106;
	cast_expression_106 -> unary_expression_105;
	unary_expression_105 -> postfix_expression_104;
	postfix_expression_104 -> postfix_expression_103;
	postfix_expression_103 -> primary_expression_102;
	primary_expression_102 -> identifier_101;
	iteration_statement_122 -> empty_121;
empty_121 [style=filled,color=indigo,fontcolor=white]
	iteration_statement_122 -> statement_100;
	statement_100 -> compound_statement_99;
	compound_statement_99 -> statement_list_98;
	statement_list_98 -> statement_97;
	statement_97 -> expression_statement_96;
	expression_statement_96 -> expression_95;
	expression_95 -> assignment_expression_94;
	assignment_expression_94 -> conditional_expression_93;
	conditional_expression_93 -> logical_or_expression_92;
	logical_or_expression_92 -> logical_and_expression_91;
	logical_and_expression_91 -> inclusive_or_expression90;
	inclusive_or_expression90 -> exclusive_or_expression_89;
	exclusive_or_expression_89 -> and_expression_88;
	and_expression_88 -> equality_expression_87;
	equality_expression_87 -> relational_expression_86;
	relational_expression_86 -> shift_expression_85;
	shift_expression_85 -> additive_expression_84;
	additive_expression_84 -> multiplicative_expression_83;
	multiplicative_expression_83 -> cast_expression_82;
	cast_expression_82 -> unary_expression_81;
	unary_expression_81 -> unary_expression_80;
	unary_expression_80 -> postfix_expression_79;
	postfix_expression_79 -> primary_expression_78;
	primary_expression_78 -> identifier_77;
	statement_list_145 -> statement_144;
	statement_144 -> jump_statement_143;
	jump_statement_143 -> expression_142;
	expression_142 -> assignment_expression_141;
	assignment_expression_141 -> conditional_expression_140;
	conditional_expression_140 -> logical_or_expression_139;
	logical_or_expression_139 -> logical_and_expression_138;
	logical_and_expression_138 -> inclusive_or_expression137;
	inclusive_or_expression137 -> exclusive_or_expression_136;
	exclusive_or_expression_136 -> and_expression_135;
	and_expression_135 -> equality_expression_134;
	equality_expression_134 -> relational_expression_133;
	relational_expression_133 -> shift_expression_132;
	shift_expression_132 -> additive_expression_131;
	additive_expression_131 -> multiplicative_expression_130;
	multiplicative_expression_130 -> cast_expression_129;
	cast_expression_129 -> unary_expression_128;
	unary_expression_128 -> postfix_expression_127;
	postfix_expression_127 -> primary_expression_126;
	primary_expression_126 -> constant125;
}
